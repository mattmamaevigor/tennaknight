import discord
from discord.ext import commands
import random
import asyncio
from datetime import datetime
import json
import os

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "MTQwNTE3NjMwNTI2MzA1MDgzNA.GS_FeX.XU-H8sP7sU8GPkYfpIG3HstcHUv4t-XVj8n2ng"

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

# –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π (–ø—Ä–æ—Å—Ç–∞—è)
user_data = {}

def load_user_data():
    global user_data
    if os.path.exists('user_data.json'):
        with open('user_data.json', 'r', encoding='utf-8') as f:
            user_data = json.load(f)

def save_user_data():
    with open('user_data.json', 'w', encoding='utf-8') as f:
        json.dump(user_data, f, ensure_ascii=False, indent=2)

def add_experience(user_id, exp=1):
    user_id = str(user_id)
    if user_id not in user_data:
        user_data[user_id] = {'level': 1, 'exp': 0}
    
    user_data[user_id]['exp'] += exp
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è (–∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞)
    required_exp = user_data[user_id]['level'] * 50  # 50, 100, 150, 200...
    if user_data[user_id]['exp'] >= required_exp:
        user_data[user_id]['level'] += 1
        user_data[user_id]['exp'] = 0
        save_user_data()
        return True
    save_user_data()
    return False

@bot.event
async def on_ready():
    print(f'ü§ñ Tenna Knight –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    print(f'üÜî ID –±–æ—Ç–∞: {bot.user.id}')
    load_user_data()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    await bot.change_presence(
        activity=discord.Game(name="!–ø–æ–º–æ—â—å –¥–ª—è –∫–æ–º–∞–Ω–¥"),
        status=discord.Status.online
    )

@bot.event
async def on_message(message):
    if message.author.bot:
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—ã—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    level_up = add_experience(message.author.id)
    if level_up:
        level = user_data[str(message.author.id)]['level']
        
        # –ö—Ä–∞—Å–∏–≤–æ–µ embed-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
        embed = discord.Embed(
            title='üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!',
            description=f'**{message.author.display_name}** –¥–æ—Å—Ç–∏–≥ **{level} —É—Ä–æ–≤–Ω—è**!',
            color=discord.Color.gold()
        )
        embed.set_thumbnail(url=message.author.avatar.url if message.author.avatar else message.author.default_avatar.url)
        embed.add_field(name='–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å', value=f'`{level}`', inline=True)
        embed.add_field(name='–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å', value=f'–ù—É–∂–Ω–æ `{level * 100}` –æ–ø—ã—Ç–∞', inline=True)
        embed.set_footer(text='–ü—Ä–æ–¥–æ–ª–∂–∞–π –æ–±—â–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞!')
        
        await message.channel.send(embed=embed)
    
    await bot.process_commands(message)

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.command(name='–ø—Ä–∏–≤–µ—Ç', aliases=['hello', 'hi'])
async def greet(ctx):
    greetings = [
        f'–ü—Ä–∏–≤–µ—Ç, {ctx.author.mention}! üëã',
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {ctx.author.name}! üòä',
        f'–•–µ–π, {ctx.author.mention}! –ö–∞–∫ –¥–µ–ª–∞? ü§ó',
        f'–°–∞–ª—é—Ç, {ctx.author.name}! ‚ú®'
    ]
    await ctx.send(random.choice(greetings))

@bot.command(name='–ø—Ä–æ—Ñ–∏–ª—å', aliases=['profile', '—É—Ä–æ–≤–µ–Ω—å'])
async def profile(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author
    
    user_id = str(member.id)
    if user_id not in user_data:
        user_data[user_id] = {'level': 1, 'exp': 0}
        save_user_data()
    
    current_level = user_data[user_id]['level']
    current_exp = user_data[user_id]['exp']
    required_exp = current_level * 50
    
    embed = discord.Embed(
        title=f'üìä –ü—Ä–æ—Ñ–∏–ª—å {member.display_name}',
        color=discord.Color.blue()
    )
    embed.add_field(name='–£—Ä–æ–≤–µ–Ω—å', value=current_level, inline=True)
    embed.add_field(name='–û–ø—ã—Ç', value=f"{current_exp}/{required_exp}", inline=True)
    embed.add_field(name='–ü—Ä–æ–≥—Ä–µ—Å—Å', value=f'{round((current_exp/required_exp)*100, 1)}%', inline=True)
    embed.add_field(name='–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', value=member.created_at.strftime('%d.%m.%Y'), inline=False)
    embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)
    
    await ctx.send(embed=embed)

@bot.command(name='–∫—É–±–∏–∫', aliases=['dice', 'roll'])
async def roll_dice(ctx, sides: int = 6):
    if sides < 2:
        await ctx.send('‚ùå –ö—É–±–∏–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å—Ç–æ—Ä–æ–Ω—ã!')
        return
    if sides > 100:
        await ctx.send('‚ùå –ú–∞–∫—Å–∏–º—É–º 100 —Å—Ç–æ—Ä–æ–Ω!')
        return
    
    result = random.randint(1, sides)
    await ctx.send(f'üé≤ {ctx.author.mention} –±—Ä–æ—Å–∏–ª –∫—É–±–∏–∫ D{sides} –∏ –≤—ã–ø–∞–ª–æ: **{result}**')

@bot.command(name='–º–æ–Ω–µ—Ç–∫–∞', aliases=['coin', 'flip'])
async def flip_coin(ctx):
    result = random.choice(['–û—Ä—ë–ª', '–†–µ—à–∫–∞'])
    emoji = 'ü¶Ö' if result == '–û—Ä—ë–ª' else 'ü™ô'
    await ctx.send(f'{emoji} –í—ã–ø–∞–ª–æ: **{result}**')

@bot.command(name='–≤—ã–±–æ—Ä', aliases=['choose'])
async def choose(ctx, *, options):
    choices = [choice.strip() for choice in options.split(',')]
    if len(choices) < 2:
        await ctx.send('‚ùå –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –∑–∞–ø—è—Ç—ã–º–∏!')
        return
    
    chosen = random.choice(choices)
    await ctx.send(f'ü§î –Ø –≤—ã–±–∏—Ä–∞—é: **{chosen}**')

@bot.command(name='–∏–Ω—Ñ–æ', aliases=['info', 'about'])
async def bot_info(ctx):
    embed = discord.Embed(
        title='‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Tenna Knight',
        description='–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è Discord —Å–µ—Ä–≤–µ—Ä–∞!',
        color=discord.Color.green()
    )
    embed.add_field(name='–í–µ—Ä—Å–∏—è Python', value='3.8+', inline=True)
    embed.add_field(name='–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞', value='discord.py', inline=True)
    embed.add_field(name='–°–µ—Ä–≤–µ—Ä–æ–≤', value=len(bot.guilds), inline=True)
    embed.add_field(name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value=len(bot.users), inline=True)
    embed.set_footer(text=f'–ó–∞–ø—Ä–æ—à–µ–Ω–æ {ctx.author.name}', icon_url=ctx.author.avatar.url if ctx.author.avatar else ctx.author.default_avatar.url)
    
    await ctx.send(embed=embed)

@bot.command(name='—Å–µ—Ä–≤–µ—Ä', aliases=['server'])
async def server_info(ctx):
    guild = ctx.guild
    embed = discord.Embed(
        title=f'üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ: {guild.name}',
        color=discord.Color.purple()
    )
    embed.add_field(name='–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value=guild.member_count, inline=True)
    embed.add_field(name='–ö–∞–Ω–∞–ª–æ–≤', value=len(guild.channels), inline=True)
    embed.add_field(name='–†–æ–ª–µ–π', value=len(guild.roles), inline=True)
    embed.add_field(name='–°–æ–∑–¥–∞–Ω', value=guild.created_at.strftime('%d.%m.%Y'), inline=True)
    embed.add_field(name='–í–ª–∞–¥–µ–ª–µ—Ü', value=guild.owner.mention if guild.owner else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', inline=True)
    if guild.icon:
        embed.set_thumbnail(url=guild.icon.url)
    
    await ctx.send(embed=embed)

@bot.command(name='–≤—Ä–µ–º—è', aliases=['time'])
async def current_time(ctx):
    now = datetime.now()
    time_str = now.strftime('%H:%M:%S %d.%m.%Y')
    await ctx.send(f'üïí –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: **{time_str}**')

@bot.command(name='–æ—á–∏—Å—Ç–∏—Ç—å', aliases=['clear', 'purge'])
@commands.has_permissions(manage_messages=True)
async def clear_messages(ctx, amount: int = 5):
    if amount > 100:
        await ctx.send('‚ùå –ú–∞–∫—Å–∏–º—É–º 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑!')
        return
    
    deleted = await ctx.channel.purge(limit=amount + 1)
    msg = await ctx.send(f'üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} —Å–æ–æ–±—â–µ–Ω–∏–π')
    await asyncio.sleep(3)
    await msg.delete()

@bot.command(name='–ø–æ–º–æ—â—å', aliases=['help', 'commands'])
async def help_command(ctx):
    embed = discord.Embed(
        title='üìö –ö–æ–º–∞–Ω–¥—ã Tenna Knight',
        description='–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:',
        color=discord.Color.gold()
    )
    
    commands_list = {
        '**–û—Å–Ω–æ–≤–Ω—ã–µ:**': [
            '`!–ø—Ä–∏–≤–µ—Ç` - –ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –±–æ—Ç–∞',
            '`!–ø—Ä–æ—Ñ–∏–ª—å` - –ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
            '`!–∏–Ω—Ñ–æ` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
            '`!—Å–µ—Ä–≤–µ—Ä` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ',
            '`!–≤—Ä–µ–º—è` - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è'
        ],
        '**–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:**': [
            '`!–∫—É–±–∏–∫ [—Å—Ç–æ—Ä–æ–Ω—ã]` - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫',
            '`!–º–æ–Ω–µ—Ç–∫–∞` - –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É',
            '`!–≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç1, –≤–∞—Ä–∏–∞–Ω—Ç2, ...` - –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä'
        ],
        '**–ú–æ–¥–µ—Ä–∞—Ü–∏—è:**': [
            '`!–æ—á–∏—Å—Ç–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]` - –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞)'
        ]
    }
    
    for category, cmds in commands_list.items():
        embed.add_field(
            name=category,
            value='\n'.join(cmds),
            inline=False
        )
    
    embed.set_footer(text='–ò—Å–ø–æ–ª—å–∑—É–π !–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    await ctx.send(embed=embed)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send('‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π `!–ø–æ–º–æ—â—å` –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.')
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send('‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
    elif isinstance(error, commands.BadArgument):
        await ctx.send('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç! –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã.')
    else:
        await ctx.send(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(error)}')
        print(f'–û—à–∏–±–∫–∞: {error}')

if __name__ == '__main__':
    bot.run(BOT_TOKEN)
